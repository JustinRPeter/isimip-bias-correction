#!/bin/bash

#PBS -q normal
#PBS -l walltime=2:00:00
#PBS -l storage=gdata/er4+scratch/er4
#PBS -N job_temp_forcing
#PBS -P er4
#PBS -l ncpus=16
#PBS -l mem=64gb
#PBS -l wd

# Usage
# Set desired model, rcp, input_dir_base, and output_dir_base, convert_to_kelvin, then run the job.
# input_dir_base and output_dir_base CANNOT point to the same folder.
# This is because the same named files will be created.
# Job should be submitted in the directory that contains it.
# temp_forcing takes 2 input files (tasmin and tasmax), and generates 3 output files:
# - derived tas
# - tasmin (with any inconsistencies with tasmax < tasmin corrected)
# - tasmax (with any inconsistencies with tasmin > tasmax corrected)

model=ACCESS1-0
rcp=historical
input_dir_base=/scratch/er4/vd5822/isimip-prep/before-temp-forcing
output_dir_base=/scratch/er4/vd5822/isimip-prep
convert_to_kelvin=true



# Fail on first error
set -e

# Check if input/output base dirs specified are the same
if [ input_dir_base -ef output_dir_base ]; then
    echo "Error: input_dir_base and output_dir_base cannot be the same path"
    exit 1
fi

# Determine period
if [ ${rcp} = "historical" ]; then
    period="19600101-20051231"
fi
if [ $rcp = "rcp45" ]; then
    period="20060101-20991231"
fi
if [ $rcp = "rcp85" ]; then
    period="20060101-20991231"
fi 

tasmin_file=${input_dir_base}/${model}/tasmin_day_${model}_${rcp}_r1i1p1_${period}.nc
tasmax_file=${input_dir_base}/${model}/tasmax_day_${model}_${rcp}_r1i1p1_${period}.nc
output_dir=${output_dir_base}/${model}

additional_options=''
if [ ${convert_to_kelvin} == true ]; then
    additional_options="${additional_options} --convert_to_kelvin"
fi

echo "Model: ${model}"
echo "rcp: ${rcp}"
echo "Period: ${period}"
echo "Input tasmin file: ${tasmin_file}"
echo "Input tasmax file: ${tasmax_file}"
echo "Output dir: ${output_dir}"
echo "Additional Options: ${additional_options}"
echo ""

mkdir -p ${output_dir}

echo "Activating conda environment"
source /g/data/er4/jr6311/miniconda/bin/activate isimip

echo "Running temp_forcing"
python3 temp_forcing.py ${tasmin_file} ${tasmax_file} ${model} ${rcp} ${output_dir} ${additional_options}

echo "Job Completed"